--- /proc/self/fd/11	2022-01-26 17:42:37.973633757 -0100
+++ kore_mustach.c	2022-01-26 17:38:44.140285533 -0100
@@ -335,15 +335,12 @@
     if (o == NULL)
         return (NULL);
 
-    while (type <= KORE_JSON_TYPE_INTEGER_U64) {
+    while (type <= KORE_JSON_TYPE_LITERAL) {
 
         if ((item = kore_json_find(o, name, type)) != NULL)
             return (item);
 
-        if (kore_json_errno() != KORE_JSON_ERR_TYPE_MISMATCH)
-            return (NULL);
-
-        type = type << 1;
+        type++;
     }
 
     return (NULL);
@@ -467,8 +464,6 @@
 compare(struct kore_json_item *o, const char *value)
 {
     double      d;
-    int64_t     i;
-    uint64_t    u;
     int         err;
 
     switch (o->type) {
@@ -476,14 +471,6 @@
             d = kore_strtodouble(value, DBL_MIN, DBL_MAX, &err);
             return (!err) ? 0 : (o->data.number > d) - (o->data.number < d);
 
-        case KORE_JSON_TYPE_INTEGER:
-            i = kore_strtonum64(value, 1, &err);
-            return (!err) ? 0 : (o->data.integer > i) - (o->data.integer < i);
-
-        case KORE_JSON_TYPE_INTEGER_U64:
-            u = kore_strtonum64(value, 0, &err);
-            return (!err) ? 0 : (o->data.u64 > u) - (o->data.u64 < u);
-
         case KORE_JSON_TYPE_STRING:
             return (strcmp(o->data.string, value));
 
@@ -589,10 +576,13 @@
 const char *
 kore_mustach_strerror(void)
 {
+    struct kore_json json = {};
     size_t err = mustach_errno * -1;
 
-    if (mustach_errno == kore_json_errno())
-        return (kore_json_strerror());
+    if (mustach_errno > 0) {
+        json.error = mustach_errno;
+        return (kore_json_strerror(&json));
+    }
 
     if (err < sizeof(mustach_errtab) / sizeof(mustach_errtab[0]))
         return (mustach_errtab[err]);
@@ -624,8 +614,6 @@
 
         cl.result = *result;
         mustach_errno = mustach_file(template, 0, &itf, &cl, flags, 0);
-        if (mustach_errno == 0)
-            mustach_errno = kore_json_errno();
     }
 
     return (mustach_errno == 0 ? KORE_RESULT_OK : KORE_RESULT_ERROR);
@@ -647,7 +635,7 @@
         kore_mem_tag(*result, id);
 
         if (data != NULL) {
-            kore_json_init(&json, data, strlen(data));
+            kore_json_init(&json, (const uint8_t *)data, strlen(data));
             if (kore_json_parse(&json))
                 cl.context = json.root;
         }
@@ -655,7 +643,7 @@
         cl.result = *result;
         mustach_errno = mustach_file(template, 0, &itf, &cl, flags, 0);
         if (mustach_errno == 0)
-            mustach_errno = kore_json_errno();
+            mustach_errno = json.error;
 
         kore_json_cleanup(&json);
     }
